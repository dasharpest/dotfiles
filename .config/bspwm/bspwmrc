#!/usr/bin/env bash
#
#  ██████╗ ███████╗██████╗ ██╗    ██╗███╗   ███╗██████╗  ██████╗
#  ██╔══██╗██╔════╝██╔══██╗██║    ██║████╗ ████║██╔══██╗██╔════╝
#  ██████╔╝███████╗██████╔╝██║ █╗ ██║██╔████╔██║██████╔╝██║     
#  ██╔══██╗╚════██║██╔═══╝ ██║███╗██║██║╚██╔╝██║██╔══██╗██║     
#  ██████╔╝███████║██║     ╚███╔███╔╝██║ ╚═╝ ██║██║  ██║╚██████╗
#  ╚═════╝ ╚══════╝╚═╝      ╚══╝╚══╝ ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝

read -r RICETHEME < "$HOME"/.config/bspwm/.rice
export RICETHEME
PATH="$HOME/.config/bspwm/scripts:$PATH"
rice_dir="$HOME/.config/bspwm/rices/$RICETHEME"

## Fix java applications
export _JAVA_AWT_WM_NONREPARENTING=1

#  ╦ ╦╔═╗╦═╗╦╔═╔═╗╔═╗╔═╗╔═╗╔═╗╔═╗
#  ║║║║ ║╠╦╝╠╩╗╚═╗╠═╝╠═╣║  ║╣ ╚═╗
#  ╚╩╝╚═╝╩╚═╩ ╩╚═╝╩  ╩ ╩╚═╝╚═╝╚═╝

	# Default 1 monitor with 6 workspaces
	for monitor in "$(xrandr -q | grep -w 'connected' | cut -d' ' -f1)"; do
		bspc monitor "$monitor" -d '1' '2' '3' '4' '5' '6'
		#bspc monitor "$monitor" -d '' '' '' '' '' ''
	done

	## For two or three monitors configuration see https://github.com/gh0stzk/dotfiles/wiki/Two-or-more-monitors-setup

#  ╔╗ ╔═╗╔═╗╦ ╦╔╦╗  ╔═╗╔═╗╔╗╔╔═╗╦╔═╗
#  ╠╩╗╚═╗╠═╝║║║║║║  ║  ║ ║║║║╠╣ ║║ ╦
#  ╚═╝╚═╝╩  ╚╩╝╩ ╩  ╚═╝╚═╝╝╚╝╚  ╩╚═╝

bspc config external_rules_command "$HOME"/.config/bspwm/scripts/ExternalRules

bspc config window_gap					6
bspc config split_ratio					0.51
bspc config single_monocle				true
bspc config borderless_monocle			false
bspc config gapless_monocle				false

bspc config focus_follows_pointer		true
bspc config pointer_follows_focus		false
bspc config pointer_motion_interval		5
bspc config pointer_modifier			mod4
bspc config pointer_action1				move
bspc config pointer_action2				resize_side
bspc config pointer_action3				resize_corner

#bspc wm --adopt-orphans
bspc rule -a scratch sticky=on state=floating focus=on

## 1 > terminal (always open emacs on workspace-1)
declare -a term=(Emacs)
for i in ${term[@]}; do
   bspc rule -a $i state=tiled desktop='^1' follow=on focus=on; done

## 2 > files (always open file manager on workspace-2)
declare -a files=(qBittorrent Thunar) 
for i in ${files[@]}; do
   bspc rule -a $i desktop='^2' follow=on focus=on; done

## 3 > web (always open web browser on workspace-3)
declare -a brows=(firefox Brave-browser discord)
for i in ${brows[@]}; do
   bspc rule -a $i desktop='^3' follow=on focus=on; done
   bspc rule -a $i desktop='^3' follow=on focus=on; done

bspc rule -a Google-chrome desktop='^6' follow=on focus=on
bspc rule -a '*:*:Picture-in-picture' state=floating

## 4 > code (always open editors on workspace-4)
declare -a code=(Geany Code)
for i in ${code[@]}; do
   bspc rule -a $i desktop='^4' follow=on focus=on; done

#  ╔═╗╦ ╦╔╦╗╔═╗╔═╗╔╦╗╔═╗╦═╗╔╦╗
#  ╠═╣║ ║ ║ ║ ║╚═╗ ║ ╠═╣╠╦╝ ║ 
#  ╩ ╩╚═╝ ╩ ╚═╝╚═╝ ╩ ╩ ╩╩╚═ ╩

# Set system vars for polybar
. SetSysVars

# Terminate already running polybar, stalonetray, sxhkd and dunst instances
processes=("eww.*bar" "polybar" "sxhkd" "dunst" "stalonetray")

	for process in "${processes[@]}"; do
		if pgrep -f "$process"; then
			pkill -9 -f "$process" > /dev/null; sleep 0.1
		fi
	done

# Load bspwm conf, colors, dunst, bars and/or eww widgets
. ${rice_dir}/Theme.sh

# Launch picom // If you have old hardware or encounter problems 
# uncomment the picom "--legacy-backends" line and comment the current one.
pidof -q picom || { picom --config "$HOME"/.config/bspwm/picom.conf & }
#pidof -q picom || { picom --legacy-backends --config "$HOME"/.config/bspwm/picom.conf & }

# Set random wallpaper for actual rice
#feh -z --no-fehbg --bg-fill ${rice_dir}/walls
feh --no-fehbg --bg-fill ${rice_dir}/walls/default.jpg

# Launch eww daemon
pidof -q eww || { eww -c "$HOME"/.config/bspwm/eww daemon & }

# Reload sxhkd daemon
sxhkd -c "$HOME"/.config/bspwm/sxhkdrc &

# Launch dunst notification daemon
dunst -config "$HOME"/.config/bspwm/dunstrc &

# Launch stalonetray
stalonetray -c "$HOME"/.config/bspwm/stalonetrayrc & sleep 0.1 && xdo hide -N stalonetray && touch "/tmp/syshide.lock"

# Launch polkit
pidof -q polkit-gnome-authentication-agent-1 || { /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 & }

# Touchpad gestures
#exec libinput-gestures-setup desktop autostart start &

# Fix cursor
xsetroot -cursor_name left_ptr

# Hide mouse cursor
unclutter &

# Launch mpd daemon
exec mpd &

# Launch emacs daemon
emacs --daemon
