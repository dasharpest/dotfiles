#  ╔═╗═╗ ╦╦ ╦╦╔═╔╦╗╦═╗╔═╗
#  ╚═╗╔╩╦╝╠═╣╠╩╗ ║║╠╦╝║  
#  ╚═╝╩ ╚═╩ ╩╩ ╩═╩╝╩╚═╚═╝

# Show keybindings help
alt + F1
	KeybindingsHelp
	
# Open Terminal (alacritty)
super + Return
	OpenApps --terminal
	
# Open floating Terminal
super + shift + Return
	OpenApps --floating

# Menu aplicaciones
super + @space
	OpenApps --menu

# Theme Selector
alt + @space
	RiceSelector

# jgmenu
~button2
  xqp 0 $(xdo id -N Bspwm -n root) && jgmenu --csv-file=~/.config/bspwm/scripts/menu.txt --config-file=~/.config/bspwm/jgmenurc

# Scratchpad
super + shift + o
	tdrop -a -w 70% -h 35% -y 0 -x 15%  --class scratch alacritty --class=scratch

# Power off, Reboot, Log out, Lockscreen, kill an app
ctrl + super + alt + {p,r,q,l,k}
	{systemctl poweroff, systemctl reboot,bspc quit,physlock -d,xkill}

# (Better)Lockscreen
ctrl + alt + l
    betterlockscreen -l dimblur

##---------- Rofi Launcher & Menus ----------##

# Rofi Apps & Power Launcher
super + {a,BackSpace}
	{rofi_launcher,rofi_powermenu}

# Rofi Menus/Applets
super + shift + {e,v,n,r,s,f,b,p,a,t,m,c,u,g,period,z}
	{OpenApps --emacs-c, \
	OpenApps --nvim, \
	nmd, \
	rofi_asroot, \
	rofi_screenshot, \
	OpenApps --ranger-float, \
	brave --incognito, \
	bspcolorpicker, \
	OpenApps --usercard, \
	systray, \
	OpenApps --player, \
	OpenApps --calendar, \
	OpenApps --update, \
	OpenApps --nvtop, \
	OpenApps --screencast, \
	OpenApps --fetch}

# Rofi Window Switch
alt + Tab
	rofi_windows

button10
	rofi_windows

# System monitor
ctrl + alt + Delete
	OpenApps --htop

# Apps
shift + alt + {f,b,g,e,c,n,q,i,a,h,r,t,m,d,o,v,p,y,u,x,s,numbersign,k}
	{firefox, \
	brave, \
	google-chrome-stable, \
	geany, \
	code, \
	thunar, \
	qbittorrent, \
	gimp-2.10, \
	pavucontrol, \
    qpwgraph, \
	OpenApps --ranger, \
	telegram-desktop, \
	env LD_PRELOAD=/usr/lib/spotify-adblock.so spotify-tray --disable-gpu --no-zygote %U, \
	discord, \
	onlyoffice-desktopeditors, \
	virt-manager, \
	popcorntime, \
	audacity, \
	ardour8, \
	keepassxc, \
	surfshark, \
	OpenApps --newsboat, \
	OpenApps --music}

# Hide/Show Bar (Polybar and/or eww)
ctrl + alt {h,u}
	HideBar {-h,-u}

# Change transparency on focused window
ctrl + alt + {plus,minus,t}
	{picom-trans {-c -o +3,-c -o -1,-c -d}

# Screenshot Now
Print
	ScreenShoTer --now

# Screenshot Select
ctrl + Print
	ScreenShoTer --sel

# Screenshot in 10s
alt + Print
	ScreenShoTer --in10

# Reload sxhkd
super + Escape
	pkill -USR1 -x sxhkd; dunstify -u low -i ~/.config/bspwm/assets/reload.svg 'sxhkd' 'The configuration file has been reloaded successfully!'

# Random wallpaper
super + alt + w
	feh -z --no-fehbg --bg-fill ~/.config/bspwm/rices/$RICETHEME/walls/

#
# bspwm hotkeys
#

# Hide/Unhide Window
alt + shift + Tab
	bspwinmask

# Reload BSPWM
super + alt + r
	bspc wm -r

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# close with mouse
super + button10
	bspc node pointed -c

####

# rotate desktop
super + r
	bspc node @/ --rotate {90,-90}

# Circulate the leaves of the tree
super + c
	bspc node @/ --circulate {backward,forward}

# Make split ratios equal
super + equal
	bspc node @/ --equalize

# Make split ratios balanced
super + minus
	bspc node @/ --balance

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# swap the current node and the biggest node
super + g
	bspc node -s biggest

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
ctrl + alt + {m,x,s,p,i}
	bspc node -g {marked,locked,sticky,private,hidden}

# Focused desktop window gaps scroll
super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 5 ))

# Global window gaps scroll
super + alt + button{4,5}
	bspc config window_gap $(( $(bspc config window_gap) {-,+} 5 ))

# focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
	bspc node -{f,s} {west,south,north,east}

# focus the node in the given direction VIM keys
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + alt + {_,shift + }Tab
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + alt + {Left,Right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

shift + alt + {1-9,0}
	bspc {node -d} '^{1-9,10}' '--follow'

# cycle through occupied workspaces with side buttons
super + button{9,8}
	bspc desktop {next,prev}.occupied -f

# cycle through workspaces with side scroll
super + button{6,7}
	bspc desktop {next,prev} -f

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -10 0,bottom 0 10,top 0 -10,right 10 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -10 0,top 0 10,bottom 0 -10,left 10 0}

# move a floating window
alt + shift + {Left,Down,Up,Right}
	bspc node -v {-10 0,0 10,0 -10,10 0}

# Manage brightness
XF86MonBrightness{Up,Down}
    sh Brightness {up,down}

# Volume control
XF86Audio{RaiseVolume,LowerVolume,Mute}
	bspvolume{ --inc, --dec, --toggle}
	
super + XF86Audio{RaiseVolume,LowerVolume,Mute}
	Volume{ --inc, --dec, --toggle}
	
# Music Control
XF86Audio{Next,Prev,Play,Stop}
	MediaControl {--next,--previous,--toggle,--stop}
