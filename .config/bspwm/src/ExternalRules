#!/usr/bin/env bash
#  ███████╗██╗  ██╗████████╗███████╗██████╗ ███╗   ██╗ █████╗ ██╗
#  ██╔════╝╚██╗██╔╝╚══██╔══╝██╔════╝██╔══██╗████╗  ██║██╔══██╗██║
#  █████╗   ╚███╔╝    ██║   █████╗  ██████╔╝██╔██╗ ██║███████║██║
#  ██╔══╝   ██╔██╗    ██║   ██╔══╝  ██╔══██╗██║╚██╗██║██╔══██║██║
#  ███████╗██╔╝ ██╗   ██║   ███████╗██║  ██║██║ ╚████║██║  ██║███████╗
#  ╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚══════╝
#
#              ██████╗ ██╗   ██╗██╗     ███████╗███████╗
#              ██╔══██╗██║   ██║██║     ██╔════╝██╔════╝
#              ██████╔╝██║   ██║██║     █████╗  ███████╗
#              ██╔══██╗██║   ██║██║     ██╔══╝  ╚════██║
#              ██║  ██║╚██████╔╝███████╗███████╗███████║
#              ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝╚══════╝
#	[Author] : gh0stzk
#	 [Url]   : https://github.com/gh0stzk/dotfiles
#

wid=$1
class=$2
instance=$3
consequences=$4

# Function to calculate dimensions based on percentages
calculate_dimensions() {
	local width_percent=$1
	local height_percent=$2

	# Get screen dimensions
	read -r screen_width screen_height < <(xdpyinfo | awk '/dimensions:/ {print $2}' | tr 'x' ' ')

	# Calculate dimensions in pixels
	local width=$(((screen_width * width_percent + 50) / 100))
	local height=$(((screen_height * height_percent + 50) / 100))

	printf '%dx%d+0+0\n' "$width" "$height"
}

result() {
    eval "$consequences"
    [ "$state" ] || echo "$1"
}

case "$class" in
    FloaTerm)
        dimensions=$(calculate_dimensions 51 52)
		result "state=floating center=on rectangle=$dimensions"
        ;;
    Updating)
        dimensions=$(calculate_dimensions 25 47)
		result "state=floating sticky=on center=on rectangle=$dimensions"
        ;;
    RangerTerm)
		dimensions=$(calculate_dimensions 51 34)
		result "state=floating center=on rectangle=$dimensions"
		;;
	MusicTerm)
		dimensions=$(calculate_dimensions 41 48)
		result "state=floating center=on rectangle=$dimensions"
		;;
	FetchTerm)
		dimensions=$(calculate_dimensions 21 58)
		result "state=floating center=on rectangle=$dimensions"
		;;
    mpv)
        dimensions=$(calculate_dimensions 53 53)
		result "state=floating focus=on center=on rectangle=$dimensions"
        ;;
	firefox|Navigator)
		result "desktop=^3 follow=on"
		;;
	Gimp-2.10)
		result "desktop=^5 follow=on"
		;;
	spotify-tray)
		result "state=floating follow=on rectangle=1050x685+0+0 center=on"
		;;
	Spotify)
		result "state=floating follow=on rectangle=1050x685+0+0 center=on"
		;;
	qpwgraph)
		result "state=floating follow=on rectangle=1240x900+0+0 center=on"
		;;
	Lxappearance)
		result "state=floating follow=on rectangle=1240x900+0+0 center=on"
		;;
	Nwg-look)
		result "state=floating follow=on rectangle=1240x900+0+0 center=on"
		;;
	Nvidia-settings)
		result "state=floating follow=on rectangle=1240x900+0+0 center=on"
		;;
	Fileman)
		result "desktop=^2 follow=on"
		;;
	screencast)
		result "state=floating focus=on center=on rectangle=849x477+0+0"
		;;
	Galculator)
		result "state=floating focus=on center=on"
		;;
	gnome-network-displays)
		result "state=floating focus=on center=on"
		;;
	esac
esac

case "$instance" in
    Toolkit)
        result "state=floating sticky=on rectangle=500x290+1054+593"
        ;;
esac
